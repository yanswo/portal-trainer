// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


enum UserRole {
  ADMIN
  CLIENT
}


model User {
  id        String   @id @default(cuid()) 
  name      String?
  email     String   @unique 
  password  String   
  role      UserRole @default(CLIENT) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  profile    Profile?     
  enrollments Enrollment[]   
  supportTickets SupportTicket[] 
}


model Profile {
  id        String  @id @default(cuid())
  bio       String?
  avatarUrl String?
  userId    String  @unique 
  user      User    @relation(fields: [userId], references: [id])
}


model Course {
  id          String   @id @default(cuid())
  title       String
  description String?
  imageUrl    String?
  price       Decimal 
  isPublished Boolean  @default(false) 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt


  videos      Video[]      
  enrollments Enrollment[] 
}


model Video {
  id          String   @id @default(cuid())
  title       String
  url         String  
  position    Int      
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade) 
}


model Enrollment {
  id         String   @id @default(cuid())
  userId     String
  courseId   String
  enrolledAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  course Course @relation(fields: [courseId], references: [id])

  @@unique([userId, courseId]) 
}


model SupportTicket {
  id        String   @id @default(cuid())
  subject   String
  message   String
  status    String   @default("OPEN") 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])
}